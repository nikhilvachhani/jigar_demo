plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
//    id 'androidx.navigation.safeargs.kotlin'
}

ext.versionMajor = 0
ext.versionMinor = 0
ext.buildNumber = 50

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 33
    namespace 'com.frami'

    defaultConfig {
        applicationId "com.framiactivity.frami"
        minSdk 21
        targetSdk 33
        versionCode generateVersionCode()
        versionName "${generateVersionName()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            signingConfig signingConfigs.releaseConfig

            buildConfigField("String", "DOMAIN", '')
            buildConfigField "String", "B2C_FACEBOOK", ''
            buildConfigField "String", "B2C_APPLE", ''
            buildConfigField "String", "B2C_EMAIL", ''
            buildConfigField "String", "B2C_GOOGLE", ''
            buildConfigField "String", "B2C_FORGOT_PASSWORD", ''
        }
        debug {
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            //Optimize Debug Speed https://developer.android.com/studio/build/optimize-your-build
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'

            buildConfigField("String", "DOMAIN", '')
            buildConfigField "String", "B2C_FACEBOOK", ''
            buildConfigField "String", "B2C_APPLE", ''
            buildConfigField "String", "B2C_EMAIL", ''
            buildConfigField "String", "B2C_GOOGLE", ''
            buildConfigField "String", "B2C_FORGOT_PASSWORD", ''
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${parent.name}_${variant.versionName}.apk"
        }
    }

    flavorDimensions "server"
    productFlavors {
//        temp {
//            dimension "server"
//            buildConfigField "String", "DOMAIN_SUFFIX", '"apitemp.azurewebsites.net/api/"'
//
//            buildConfigField "String", "VERSION", "\"Temp App Version: ${generateVersionName()}\""
//            buildConfigField "String", "SHARE_URL", "https://framiwebapptemp.azurewebsites.net/"
//        }
        production {
            dimension "server"
            buildConfigField "String", "DOMAIN_SUFFIX", '"apiprod.azurewebsites.net/api/"'

            buildConfigField "String", "VERSION", "\"App Version: ${generateVersionName()}\""
            buildConfigField "String", "SHARE_URL", "\"https://framiwebappprod.azurewebsites.net/\""
            buildConfigField "String", "AUTHORITY", "\"framiwebappprod.azurewebsites.net\""
            resValue "string", "callback_domain", "framiwebappprod.azurewebsites.net"
            resValue "string", "asset_statements", "[{\\\"include\\\": \\\"https://framiwebappprod.azurewebsites.net/.well-known/assetlinks.json\\\"}]"
            buildConfigField "String", "ENVIRONMENT", '"PRODUCTION"'
        }
        framitest {
            dimension "server"
            buildConfigField "String", "DOMAIN_SUFFIX", '"apitest.azurewebsites.net/api/"'

            buildConfigField "String", "VERSION", "\"Test App Version: ${generateVersionName()}\""
            buildConfigField "String", "SHARE_URL", "\"https://framiwebapptest.azurewebsites.net/\""
            buildConfigField "String", "AUTHORITY", "\"framiwebapptest.azurewebsites.net\""
            resValue "string", "callback_domain", "framiwebapptest.azurewebsites.net"
            resValue "string", "asset_statements", "[{\\\"include\\\": \\\"https://framiwebapptest.azurewebsites.net/.well-known/assetlinks.json\\\"}]"
            buildConfigField "String", "ENVIRONMENT", '"TEST"'
        }
        dev {
            dimension "server"
            buildConfigField "String", "DOMAIN_SUFFIX", '"apidev.azurewebsites.net/api/"'

            buildConfigField "String", "VERSION", "\"Dev App Version: ${generateVersionName()}\""
            buildConfigField "String", "SHARE_URL", "\"https://framiwebappdev.azurewebsites.net/\""
            buildConfigField "String", "AUTHORITY", "\"framiwebappdev.azurewebsites.net\""
            resValue "string", "callback_domain", "framiwebappdev.azurewebsites.net"
            resValue "string", "asset_statements", "[{\\\"include\\\": \\\"https://framiwebappdev.azurewebsites.net/.well-known/assetlinks.json\\\"}]"
            buildConfigField "String", "ENVIRONMENT", '"DEV"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Navigation graph
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    // LiveData & ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.4.0'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // Dagger 2 mvvm
    implementation 'com.google.dagger:dagger:2.28.3'
//    implementation project(path: ':singledateandtimepicker')
//    implementation files('/Users/hardik/Documents/Projects/TechRouteDigisol/FramiActivity/Git/Frami/app/src/main/libs/samsung-health-data-1.5.0.aar')
    kapt 'com.google.dagger:dagger-compiler:2.26'
    kapt 'com.google.dagger:dagger-android-processor:2.26'
    implementation 'com.google.dagger:dagger-android-support:2.26'
    compileOnly "org.glassfish:javax.annotation:3.1.1"

    //retrofit server call
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.amitshekhar.android:rx2-android-networking:1.0.2"

    // gson
    implementation "com.google.code.gson:gson:2.8.9"

    //room database
    implementation 'androidx.room:room-runtime:2.4.0'
    kapt 'androidx.room:room-compiler:2.4.0'
    implementation 'androidx.room:room-rxjava2:2.4.0'

    // RxKotlin
    implementation("io.reactivex.rxjava2:rxkotlin:2.4.0")
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //MultiDex
    implementation 'com.android.support:multidex:1.0.3'

    //Glide Image Loading
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //Chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
//    implementation 'com.github.PhilJay:MPAndroidChart:-SNAPSHOT'

    //Sliding Panel
    implementation 'com.sothree.slidinguppanel:library:3.4.0'

    //Permission
    implementation 'com.karumi:dexter:6.2.3'
    //Crop Image
    implementation 'com.github.yalantis:ucrop:2.2.6'
    //Azure B2C
    if (findProject(':msal') != null) {
        // For developer team only.
        localImplementation project(':msal')
        externalImplementation 'com.microsoft.identity.client:msal:2.+'
    } else {
        // Downloads and Builds MSAL from maven central.
        implementation 'com.microsoft.identity.client:msal:2.+'
    }

    //JSONtoKotlin Class
//    implementation 'wu.seal.jsontokotlin:library:3.6.1'

    //Firebase
    // Import the Firebase BoM
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'

//    implementation 'com.kovachcode:timePickerWithSeconds:1.0.1'

    def lottieVersion = "5.0.3"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    //Google Map
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.libraries.places:places:2.6.0'
    implementation 'com.google.maps.android:android-maps-utils:0.4+'

    //App Badge Count
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    //https://github.com/leolin310148/ShortcutBadger

    //Video Player
    implementation 'com.google.android.exoplayer:exoplayer:2.14.0'
//    implementation 'com.google.android.exoplayer:exoplayer-core:2.14.0'
//    implementation 'com.google.android.exoplayer:exoplayer-dash:2.14.0'
//    implementation 'com.google.android.exoplayer:exoplayer-ui:2.14.0'
//    implementation 'com.google.android.exoplayer:extension-cronet:2.14.0'
//    implementation 'com.google.android.exoplayer:exoplayer-hls:2.14.0'

//    def pickerVersion = "1.0.0" //look-up the latest one on jitpack
//    //the core package is a must
//    implementation "com.github.FunkyMuse.MediaPicker:core:$pickerVersion"
//    //videos
//    implementation "com.github.FunkyMuse.MediaPicker:videopicker:$pickerVersion"

//    implementation 'com.github.majidarabi:AndroidFilePicker:0.2.1'

//    implementation 'com.droidninja:filepicker:2.2.5'

    //Seekbar
    implementation 'com.github.warkiz.widget:indicatorseekbar:2.1.2'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:3.0.3'
}

private Integer generateVersionCode() {
    def var = ext.versionMajor * 1000000 + ext.versionMinor * 1000 + ext.buildNumber
    println "Release Version Code: " + var
    return var
}

private String generateVersionName() {
    def versionName = "v_${ext.versionMajor}_${ext.versionMinor}_${ext.buildNumber}_${date}"
    println "Release Version Name: " + versionName
    return versionName
}

private Integer generateDebugVersionCode() {
    return ext.versionMajor * 1000000 + ext.versionMinor * 1000 + ext.buildNumber
}

private String generateDebugVersionName() {
    return "${ext.versionMajor}.${ext.versionMinor}.${ext.buildNumber}.${date}"
}

private static String getDate() {
    return new Date().format('ddMMMyy')
}